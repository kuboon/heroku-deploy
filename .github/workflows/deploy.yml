name: Deploy

on:
  workflow_run:
    workflows: [Tests]
    types: [completed]
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
    steps:
      - uses: actions/checkout@v4
      - name: Get version from package.json and compare with the latest tag
        id: get_tag
        run: |
          TAG_NAME=v$(node -p "require('./package.json').version")
          if git fetch --depth 1 origin tag $TAG_NAME; then
            echo "::notice::$TAG_NAME already released."
            exit 0
          fi
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

  build:
    needs: check
    if: needs.check.outputs.TAG_NAME
    env:
      TAG_NAME: ${{ needs.check.outputs.tag_name }}
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/package
      - name: Set repo owner's email and name
        run: |
          git config --global user.email $GITHUB_ACTOR@users.noreply.github.com
          git config --global user.name $GITHUB_ACTOR
      - name: Create a release
        run: |
          cd ../latest
          git add .
          git commit -m "release $TAG_NAME"
          git tag $TAG_NAME
          git push origin latest --tags
          gh release create $TAG_NAME -t $TAG_NAME -n "Release $TAG_NAME"
        env:
          GH_TOKEN: ${{ github.token }}
